services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: splash-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend-data:/app/data
    environment:
      - PYTHONPATH=/app
      - RELOAD_FLAG=--reload
      - LOG_LEVEL=debug
    networks:
      - splash-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - ./backend/.env.local

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: splash-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - splash-network
    env_file:
      - ./frontend/.env.local

  postgres:
    image: postgres:15-alpine  # Using specific version for better caching
    container_name: splash-postgres
    environment:
      - POSTGRES_USER=splash
      - POSTGRES_PASSWORD=splash
      - POSTGRES_DB=splash
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - splash-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U splash"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  backend-data:
  postgres_data:

networks:
  splash-network:
    driver: bridge